name: Deploy to Development

on:
  push:
    branches:
      - main

permissions:
  contents: write
  deployments: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack
        run: corepack enable

      - name: Install pnpm
        run: corepack prepare pnpm@9.0.0 --activate

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run type check
        run: pnpm run type-check

      - name: Run unit tests
        run: pnpm test -- --coverage --ci

      - name: Run E2E tests
        run: pnpm run test:e2e

      - name: Check coverage thresholds
        run: |
          STATEMENTS=$(cat coverage/coverage-summary.json | jq '.total.statements.pct')
          FUNCTIONS=$(cat coverage/coverage-summary.json | jq '.total.functions.pct')
          echo "Statement coverage: $STATEMENTS%"
          echo "Function coverage: $FUNCTIONS%"
          if (( $(echo "$STATEMENTS < 95" | bc -l) )); then
            echo "❌ Statement coverage ($STATEMENTS%) is below 95% threshold"
            exit 1
          fi
          if (( $(echo "$FUNCTIONS < 95" | bc -l) )); then
            echo "❌ Function coverage ($FUNCTIONS%) is below 95% threshold"
            exit 1
          fi
          echo "✅ Coverage thresholds met"

  deploy-development:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: development
      url: https://second-brain-dev.your-subdomain.workers.dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack
        run: corepack enable

      - name: Install pnpm
        run: corepack prepare pnpm@9.0.0 --activate

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Deploy to Cloudflare Workers (Development)
        id: deploy
        run: pnpm run deploy:dev
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}

      - name: Create deployment summary
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "### 🚀 Deployment Successful (Development)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Environment:** Development" >> $GITHUB_STEP_SUMMARY
            echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
            echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
            echo "**Deployed at:** $(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
            echo "**URL:** https://second-brain-dev.your-subdomain.workers.dev" >> $GITHUB_STEP_SUMMARY
          else
            echo "### ❌ Deployment Failed (Development)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "The deployment to development has failed. Please check the logs." >> $GITHUB_STEP_SUMMARY
          fi
